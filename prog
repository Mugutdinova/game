let obj = [];
let count = 0;
let time = 0;
let ball = 0;
let pause = true;
let date1 = Date.now();
let obj_move = {};
let bonus = 0;
let isBonusRound = false; 
let bonusStartTime = 0; 
let ballBeforeBonusRound = 0;
const BONUS_ROUND_DURATION = 5000;

let audio_fon = new Audio('audio/fon.mp3');
audio_fon.loop = true;
audio_fon.volume = 0.7;
function f_preloader(){
    preloader.className = '';
    preloader.hidden = true;   
    time = 0;
    ball = 0;
    count = 0;
    f_creat_obj('c0',0,['weapon'],0,window.innerHeight*0.9,{dw:3,dh:3,alpha:180});
    obj_move = obj['id'+(count-1)];
    audio_fon.play();
    pause = false;
    drow();  
}

function drow(){
    let opponent = document.getElementsByClassName('opponent');
    let ally = document.getElementsByClassName('ally');
    for(let op of opponent){
        let o = obj[op.getAttribute('id')];
        for(let al of ally){            
            let a = obj[al.getAttribute('id')];
            if(((o.x-a.x)**2+(o.y-a.y)**2)**0.5 <= (o.w/2+a.w/2)){
                a.повернуться_к(o);
                a.вперед(a.w*3/4);
                
                if(o.picture.className.indexOf('false_obj')>=0) {
                    ball--;
                    f_creat_obj('c0',500,['bang2'],a.x,a.y,{dw:3,dh:3,музыка:'audio/bang1.wav'});
                } else {
                    ball++;
                    f_creat_obj('c0',500,['bang1'],a.x,a.y,{dw:3,dh:3,музыка:'audio/bang1.wav'});
                }
                a.удалить_объект();
                o.удалить_объект();
                schet.innerHTML = ball;
                checkGameOver();
            }
        }
    }    
    for(let value in obj) {      
        obj[value].f0();
        obj[value].f1();
    }        
    
    // Проверка на начало бонусного раунда
    if (ball >= 15 && !isBonusRound) {
        startBonusRound();
    }

    // Проверка на завершение бонусного раунда
    if (isBonusRound && Date.now() - bonusStartTime >= BONUS_ROUND_DURATION) {
        endBonusRound();
    }

    if(time%150 == 0 && !isBonusRound) {
        f_creat_obj('c_opponent',15000,['opponent','false_obj'],0,100,{dw:2,dh:2,txt: ns()});
    }
    if(time%150 == 0 && !isBonusRound) {
        f_creat_obj('c_opponent',15000,['opponent','true_obj'],0,100,{dw:2,dh:2,txt: s()});
    }

    time++;
    if(!pause) {
        requestAnimationFrame(drow);
    }
}

function startBonusRound() {
    isBonusRound = true;
    bonusStartTime = Date.now();
    ballBeforeBonusRound = ball;

    // Удаление всех объектов opponent
    for (let key in obj) {
        if (obj[key].picture.classList.contains('opponent')) {
            obj[key].удалить_объект();
        }
    }

    // Создание 20 объектов bonus
    for (let i = 0; i < 20; i++) {
        f_creat_obj('c_bonus', 5000, ['bonusbum'], Math.random() * window.innerWidth, Math.random() * window.innerHeight, { dw: 1, dh: 1 });
    }
}

function endBonusRound() {
    isBonusRound = false;

    // Удаление всех объектов bonus
    for (let key in obj) {
        if (obj[key].picture.classList.contains('bonusbum')) {
            obj[key].удалить_объект();
        }
    }
     // Возвращение игры в прежний режим
     schet.innerHTML = ball;
      // Возвращаем создание объектов opponent
    if (time % 300 == 0 && !isBonusRound) {
        f_creat_obj('c_opponent', 15000, ['opponent', 'false_obj'], 0, 100, { dw: 2, dh: 2, txt: ns() });
    }
    if (time % 300 == 0 && !isBonusRound) {
        f_creat_obj('c_opponent', 15000, ['opponent', 'true_obj'], 0, 100, { dw: 2, dh: 2, txt: s() });
    }
}

function f_click(event){
    let id = event.currentTarget.getAttribute('id');
    let c_name = event.currentTarget.className;
     schet.innerHTML = Math.ceil(ball);
     if (c_name.indexOf('bonusbum') >= 0) {
        // Начисление балла за клик на бонус
        ball++;
        obj[id].удалить_объект();
    }
    checkGameOver();
}

// Заменяем document.onmousemove на обработчик касаний
document.ontouchmove = function(event) {
    if ((!pause) && (typeof(obj_move.picture) != 'undefined')) {
        event.preventDefault(); // Предотвращаем скроллинг страницы
        let touch = event.touches[0];
        obj_move.x = touch.clientX;
        obj_move.y = touch.clientY;
    }
}

// Заменяем document.onmousedown на обработчик касаний
document.ontouchstart = function(event) {
    if ((!pause) && (typeof(obj_move.picture) != 'undefined')) {
        event.preventDefault(); // Предотвращаем скроллинг страницы
        let touch = event.touches[0];
        f_creat_obj('c_ally', 1500, ['ally'], obj_move.x, obj_move.y, {музыка: 'audio/bang1.wav', alpha: obj_move.alpha, сместить: obj_move.h / 2, dw: 1 / 3, dh: 1 / 3});
    }
}
function s(){
    let n=100;
    let a=Math.round(Math.random()*n);
    let b=Math.round(Math.random()*n);
    let c=a+b;
    return (a+'+'+b+'='+c);
}
function ns(){
    let k=100;
    let v=Math.round(Math.random()*k);
    let n=100;
    let a=Math.round(Math.random()*n);
    let b=Math.round(Math.random()*n);
    let c=a+b;
    return (a+'+'+b+'='+v);
}
function checkGameOver() {
    if (ball >= 30) {
        pause = true;
        date1 = Date.now() - date1;
        alert('Поздравляем! Вы набрали 30 баллов. Ваше время: ' + Math.round(date1 / 1000) + ' сек.');
    } else if (ball <= -5) {
        pause = true;
        alert('Игра окончена. Вы набрали -5 баллов. Вам нужно еще потренироваться.');
    }
}
